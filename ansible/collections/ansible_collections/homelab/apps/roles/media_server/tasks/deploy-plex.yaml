---
- name: Add user {{ media_server_plex_container_user }}
  ansible.builtin.user:
    name: "{{ media_server_plex_container_user }}"
    comment: User used to run plex
    create_home: false
    shell: /usr/sbin/nologin
  register: media_server_plex_container_user_result

- name: Create plex directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0770"
    owner: "{{ media_server_plex_container_user }}"
    group: "{{ media_server_plex_container_user }}"
  with_items:
    - "{{ media_server_plex_conf_dir }}"
    - "{{ media_server_plex_database_dir }}"

- name: Change ownership of {{ media_server_plex_database_dir }}
  ansible.builtin.file:
    path: "{{ media_server_plex_database_dir }}"
    state: directory
    group: "{{ media_shared_group }}"
    mode: "0770"

- name: Create plex network Quadlet
  containers.podman.podman_network:
    name: plex
    state: quadlet
    # Enable DNS resolution based on container names
    disable_dns: false
    dns:
      - "{{ internal_gateway }}"
    driver: bridge
    force: true
    recreate: true
    # Need to be reachable by Traefik
    internal: false
    interface_name: podman-plex
    opt:
      isolate: true
  notify:
    - Reload systemd daemons for media-server role
    - Restart plex network

- name: Trigger Handlers for plex network
  ansible.builtin.meta: flush_handlers

- name: Start plex network
  ansible.builtin.systemd_service:
    # The name is the name of the network + network suffix
    name: plex-network
    state: started
    enabled: true

- name: Copy plex.env file
  ansible.builtin.template:
    src: plex.env.j2
    dest: "{{ media_server_plex_conf_dir }}/plex.env"
    mode: "0640"
  notify:
    - Restart plex service

- name: Create plex Quadlet
  containers.podman.podman_container:
    name: plex
    state: quadlet
    image: lscr.io/linuxserver/plex:{{ media_server_plex_version }}
    env_file: "{{ media_server_plex_conf_dir }}/plex.env"
    recreate: true
    network: plex

    volumes:
      - "{{ media_server_plex_database_dir }}:/config"
      - "{{ media_server_media_dir }}:/data:ro"

    device:
      # HW acceleration
      - /dev/dri:/dev/dri

    # https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/
    ports:
      - 1900:1900/udp
      - 5353:5353/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32400:32400/tcp
      - 32414:32414/tcp
      - 32469:32469/tcp

    uidmap:
      - 0:4000000000:1000
      - 1000:{{ media_server_plex_container_user_result.uid }}:1
      - 1001:4000001001:100000

    gidmap:
      - 0:4000000000:100000
      - +1000:@{{ media_gid }}:1

    labels:
      traefik.enable: true
      traefik.http.routers.plex.rule: Host(`plex.{{ internal_domain }}`)
      traefik.http.routers.plex.entrypoints: websecure
      traefik.http.routers.plex.tls.certresolver: letsencrypt
      traefik.http.routers.plex.tls.domains[0].main: plex.{{ internal_domain }}
      traefik.http.services.plex.loadbalancer.server.port: 32400

    quadlet_options:
      - |
        [Install]
        WantedBy=default.target
  notify:
    - Reload systemd daemons for media-server role
    - Restart plex service

- name: Trigger Handlers for plex
  ansible.builtin.meta: flush_handlers

- name: Start plex
  ansible.builtin.systemd_service:
    name: plex
    state: started
    enabled: true
