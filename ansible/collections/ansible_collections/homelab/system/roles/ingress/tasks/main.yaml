---
- name: Add user {{ traefik_container_user }}
  ansible.builtin.user:
    name: "{{ traefik_container_user }}"
    comment: User used to run Traefik
    create_home: false
    shell: /usr/sbin/nologin
  register: traefik_container_user_result

- name: Create Traefik directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0700"
    owner: "{{ traefik_container_user }}"
    group: "{{ traefik_container_user }}"
    recurse: true
  with_items:
    - /app/traefik/conf
    - /app/traefik/work
    - /app/traefik/work/certificates

- name: Copy traefik.yaml configuration
  ansible.builtin.copy:
    content: |
      global:
        checkNewVersion: true
        sendAnonymousUsage: false

      entryPoints:

        public-insecure:
          address: :9080
          transport:
            respondingTimeouts:
              readTimeout: 600
              writeTimeout: 600
              idleTimeout: 600

        public-secure:
          address: :9443
          transport:
            respondingTimeouts:
              readTimeout: 600
              writeTimeout: 600
              idleTimeout: 600

        web:
          address: :8081
          transport:
            respondingTimeouts:
              readTimeout: 0
              writeTimeout: 0
              idleTimeout: 0

        websecure:
          address: :8443
          transport:
            respondingTimeouts:
              readTimeout: 0
              writeTimeout: 0
              idleTimeout: 0

      api:
        # Dashboard is served on port 8080
        insecure: true
        dashboard: true

      providers:
        docker:
          exposedByDefault: false
          # This is a security risk, it should be better
          # to expose and use a TCP socket
          endpoint: "unix:///var/run/docker.sock"

      log:
        level: INFO

      certificatesResolvers:
        letsencrypt:
          acme:
            email: {{ acme_email }}
            storage: /app/traefik/work/certificates/acme.json
            dnsChallenge:
              provider: porkbun
              delayBeforeCheck: 60

      # Enable access logs
      accessLog: {}

    dest: /app/traefik/conf/traefik.yaml
    mode: "0600"
    owner: "{{ traefik_container_user }}"
    group: "{{ traefik_container_user }}"
  notify: Restart Traefik service

- name: Copy traefik.env configuration
  ansible.builtin.copy:
    content: |
      PORKBUN_API_KEY={{ ingress_porkbun_api_key }}
      PORKBUN_SECRET_API_KEY={{ ingress_porkbun_secret_key }}
      LEGO_DISABLE_CNAME_SUPPORT=true

    dest: /app/traefik/conf/traefik.env
    mode: "0600"
    owner: "{{ traefik_container_user }}"
    group: "{{ traefik_container_user }}"
  notify: Restart Traefik service

- name: Get the group ID of the 'containers' group
  ansible.builtin.shell: |
    getent group containers | cut -d: -f3
  register: containers_group_result

- name: Create Traefik Quadlet
  containers.podman.podman_container:
    name: traefik
    state: quadlet
    image: docker.io/traefik:{{ ingress_traefik_version }}

    env_file: /app/traefik/conf/traefik.env
    recreate: true
    network: host

    volumes:
      - "/app/traefik/conf/traefik.yaml:/etc/traefik/traefik.yml:ro"
      - "/app/traefik/work:/app/traefik/work"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

    uidmap:
      - 0:{{ traefik_container_user_result.uid }}:1
      - 1:4000000000:100000

    # The gidmap is needed to give traefik access to the Docker socket.
    gidmap:
      - 0:{{ containers_group_result.stdout }}:1
      - 1:4000000000:100000

    quadlet_options:
      - |
        [Install]
        WantedBy=default.target
  notify:
    - Reload systemd daemons for ingress role
    - Restart Traefik service

- name: Enable and start traefik service
  ansible.builtin.systemd_service:
    name: traefik.service
    enabled: true
    state: started
