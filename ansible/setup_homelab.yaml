---
- name: Configure home lab
  hosts: all

  vars:
    # This group will be used to grant read access to media files between different applications
    media_shared_group: media
    # The directory is used to save finished media that can be served
    media_data_dir: /external/media

  tasks:
    - name: Ensure group exists with name {{ media_shared_group }}
      ansible.builtin.group:
        name: "{{ media_shared_group }}"
        state: present
      register: media_group_result

    - name: Set media_gid
      ansible.builtin.set_fact:
        media_gid: "{{ media_group_result.gid }}"

    - name: Create directory {{ media_data_dir }}
      ansible.builtin.file:
        path: "{{ media_data_dir }}"
        state: directory
        mode: "0770"
        group: "{{ media_shared_group }}"

    - ansible.builtin.import_role:
        name: homelab.system.network
      become: true
      tags: system-network

    - ansible.builtin.import_role:
        name: homelab.system.base
      become: true
      vars:
        base_ohmyzsh_install: true
        base_ohmyzsh_users:
          - root
          - gbaratta
      tags: system-base

    - ansible.builtin.import_role:
        name: homelab.system.auto_remediation
      become: true
      tags: auto-remediation

    - ansible.builtin.import_role:
        name: homelab.system.logging
      become: true
      vars:
        logging_enable_aws_cloudwatch: true
      tags: system-logging

    - ansible.builtin.import_role:
        name: homelab.system.ingress
      become: true
      tags: ingress

    - ansible.builtin.import_role:
        name: homelab.system.containers
      become: true
      vars:
        containers_storage_dir: /app/containers
      tags: containers

    - ansible.builtin.import_role:
        name: homelab.system.idp
      become: true
      tags: idp

    - name: Set fact from idp terraform output
      ansible.builtin.set_fact:
        vpn_netbird_idp_client_id: "{{ idp_zitadel_terraform_output.outputs.netbird_client_id.value }}"
        vpn_netbird_idp_client_secret: "{{ idp_zitadel_terraform_output.outputs.netbird_client_secret.value }}"
        coder_idp_client_id: "{{ idp_zitadel_terraform_output.outputs.coder_client_id.value }}"
        coder_idp_client_secret: "{{ idp_zitadel_terraform_output.outputs.coder_client_secret.value }}"
        remote_control_oauth2_client_id: "{{ idp_zitadel_terraform_output.outputs.olivetin_client_id.value }}"
        remote_control_oauth2_client_secret: "{{ idp_zitadel_terraform_output.outputs.olivetin_client_secret.value }}"
      tags: idp

    - ansible.builtin.import_role:
        name: homelab.system.remote_control
      become: true
      tags: remote-control

    - ansible.builtin.import_role:
        name: homelab.system.vpn
      become: true
      tags: vpn

    - ansible.builtin.import_role:
        name: homelab.system.latency_monitor
      become: true
      tags: monitoring

    - ansible.builtin.import_role:
        name: homelab.apps.adguard
      become: true
      tags: adguard

    - ansible.builtin.import_role:
        name: homelab.apps.prometheus
      become: true
      tags: prometheus

    - ansible.builtin.import_role:
        name: prometheus.prometheus.node_exporter
      become: true
      vars:
        node_exporter_web_listen_address: 172.16.255.254:9100
      tags: prometheus

    - ansible.builtin.import_role:
        name: homelab.apps.grafana
      become: true
      tags: grafana

    - ansible.builtin.import_role:
        name: homelab.apps.mqtt_broker
      become: true
      tags: mqtt-broker

    - ansible.builtin.import_role:
        name: homelab.apps.coder
      become: true
      tags: coder

    - ansible.builtin.import_role:
        name: homelab.apps.media_server
      vars:
        media_server_media_dir: "{{ media_data_dir }}"
      become: true
      tags: media-server

    - ansible.builtin.import_role:
        name: homelab.apps.p2p
      vars:
        # The directory is used to stage downloaded and incomplete files
        p2p_downloads_dir: /external/downloads
        p2p_sonarr_media_dir: "{{ media_data_dir }}/tv"
        p2p_radarr_media_dir: "{{ media_data_dir }}/movies"
      become: true
      tags: p2p
