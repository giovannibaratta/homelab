- name: Check required variables
  fail:
    msg: >
      The variables 'wan_interface', 'pppoe_username', 'pppoe_password', 'internal_interface',
      'internal_network_cidr', 'internal_gateway', 'internal_network_dhcp_start',
      'internal_network_dhcp_end' are required.
  when: >
    wan_interface == '' or
    internal_interface == '' or
    pppoe_username == '' or
    pppoe_password == '' or
    internal_network == '' or
    internal_network_netmask == '' or
    internal_gateway == '' or
    internal_network_dhcp_start == '' or
    internal_network_dhcp_end == ''

- name: Create VLAN config
  copy:
    content: |
      id=vlan
      type=vlan
      uuid=077e178d-47a4-483a-9ce3-6c7310b62621
      autoconnect=false

      [vlan]
      id=835
      parent={{ wan_interface }}
      flags=1

      [ipv4]
      method=disabled

      [ipv6]
      method=ignore
      addr-gen-mode=default

      [ethernet]

      [proxy]
    dest: /etc/NetworkManager/system-connections/vlan.nmconnection
    mode: 0600

- name: Create PPPOE connection config
  copy:
    content: |
      [connection]
      id=pppoe-ftth
      uuid=bda1f9f7-7a73-4776-b6b4-3c35d6e8e820
      type=pppoe
      interface-name=ftth

      [ipv4]
      method=auto

      [ipv6]
      method=auto
      addr-gen-mode=default

      [ethernet]

      [pppoe]
      parent={{ wan_interface }}.835
      password="{{ pppoe_password }}"
      username="{{ pppoe_username }}"

      [proxy]
    dest: /etc/NetworkManager/system-connections/pppoe.nmconnection
    mode: 0600

# Required for VLAN tagging
- name: Load kernel module 8021q
  modprobe:
    name: 8021q
    state: present

- name: Create /etc/modules-load.d/8021q.conf
  copy:
    content: 8021q
    dest: /etc/modules-load.d/8021q.conf
    mode: 0644

- name: Install iproute2
  apt:
    name: iproute2
    state: present
    update_cache: yes

- name: Install network-manager
  apt:
    name: network-manager
    state: present
    update_cache: yes

# Enable IP forwarding
- name: Configure routing table
  copy:
    content: |
      net.ipv4.ip_forward=1
    dest: /etc/sysctl.d/20-ip-forward.conf
    mode: 0644

- name: Enable IP forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present

- name: Install nftables
  apt:
    name: nftables
    state: present
    update_cache: yes

- name: Configure NAT rules with nftables
  blockinfile:
    path: /etc/nftables.conf
    backup: yes
    create: yes
    insertbefore: EOF
    block: |
      # The source IP for masquerading will be automagically infered based on the
      # output interface
      # table ip affects only IPv4
      table ip nat {
        chain prerouting {
          type nat hook prerouting priority 0; policy accept;
        }

        # for all packets to WAN, after routing,
        # replace source address with primary IP of WAN interface
        chain postrouting {
          type nat hook postrouting priority 100; policy accept;
          oifname "{{ wan_interface }}" masquerade
        }
      }

      # Drop all traffic from internet to internal network
      table ip filter {

        chain dispatcher {
          type filter hook input priority filter;

          iif lo accept comment "always accept loopback"
          iifname {{ wan_interface}} jump public_filters
          iifname {{ internal_interface}} jump internal_filters

          reject
        }

        chain public_filters {
          ct state {established,related} accept
          ct state invalid drop
          drop
        }

        chain internal_filters {
          accept
        }

        chain output {
          type filter hook output priority filter;
          accept
        }
      }

- name: Reload nftables
  command: nft -f /etc/nftables.conf
  notify:
    - Restart nftables service

- name: Enable nftables on boot
  service:
    name: nftables
    state: started
    enabled: yes

- name: Install Kea
  apt:
    name: isc-dhcp-server
    state: present
    update_cache: yes

- name: Configure DHCP server interface
  lineinfile:
    path: /etc/default/isc-dhcp-server
    line: INTERFACESv4="{{ internal_interface }}"
    create: yes
    regexp: '^INTERFACESv4='

- name: Configure DHCP server
  copy:
    content: |
      subnet {{ internal_network }} netmask {{ internal_network_netmask }} {
        range {{ internal_network_dhcp_start }} {{ internal_network_dhcp_end }};
        option subnet-mask {{ internal_network_netmask }};
        option routers {{ internal_gateway }};
      }
    dest: /etc/dhcp/dhcpd.conf
    mode: 0644
    backup: yes

- name: Restart Kea service
  service:
    name: isc-dhcp-server
    state: restarted
    enabled: yes
