# This workaround is needed because the current release of Bitwarden Secret Manager is bugged and
# two variables cannot be used at the same time.
# https://community.bitwarden.com/t/bitwarden-lookup-plugin-for-ansible-causes-panick-errors-and-a-worker-was-found-in-a-dead-state/64579/7
- set_fact:
    coder_db_password: "{{ coder_db_password }}"

- set_fact:
    internal_domain: "{{ internal_domain }}"

- name: Add {{ coder_container_user }} user
  ansible.builtin.user:
    name: "{{ coder_container_user }}"
    comment: User used to run Coder
    create_home: no
    shell: /usr/sbin/nologin
  register: coder_container_user_result

- name: Add {{ coder_db_container_user }} user
  ansible.builtin.user:
    name: "{{ coder_db_container_user }}"
    comment: User used to run the PostgreSQL database for Coder
    create_home: no
    shell: /usr/sbin/nologin
  register: coder_db_container_user_result

- name: Create coder directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0770
    owner: "{{ coder_container_user }}"
    group: "{{ coder_container_user }}"
  with_items:
    - "{{ coder_conf_dir }}"
    - "{{ coder_work_dir }}"
    - "{{ coder_database_dir }}"

- name: Change {{ coder_database_dir }} ownership
  file:
    path: "{{ coder_database_dir }}"
    state: directory
    recurse: true
    owner: "{{ coder_db_container_user }}"
    group: "{{ coder_db_container_user }}"

- name: Copy coder-db.env file
  template:
    src: coder-db.env.j2
    dest: "{{ coder_conf_dir }}/coder-db.env"
    mode: 0640
  notify:
    - Restart Coder DB service
    - Restart Coder service

- name: Copy coder.env file
  template:
    src: coder.env.j2
    dest: "{{ coder_conf_dir }}/coder.env"
    mode: 0640
  notify:
    - Restart Coder service

- name: Create Coder network Quadlet
  containers.podman.podman_network:
    name: coder
    state: quadlet
    # Enable DNS resolution based on container names
    disable_dns: false
    dns:
      - "{{ internal_gateway }}"
    driver: bridge
    force: true
    recreate: true
    # Need to be reachable by Traefik
    internal: false
    interface_name: podman-coder
    opt:
      isolate: true
  notify:
    - Reload systemd daemons
    - Restart Coder network

- meta: flush_handlers

- name: Start Coder network
  systemd_service:
    # The name is the name of the network + network suffix
    name: coder-network
    state: started
    enabled: true

- name: Get the group ID of the 'containers' group
  shell: |
    getent group containers | cut -d: -f3
  register: containers_group_result

- name: Create Coder database Quadlet
  containers.podman.podman_container:
    name: coder-db
    image: docker.io/postgres:16.3-alpine
    state: quadlet

    volumes: "{{ coder_database_dir }}:/var/lib/postgresql/data"
    env_file: "{{ coder_conf_dir }}/coder-db.env"
    network: coder
    delete_depend: true

    # Coder runs as root:root but /var/lib/postgresql/data must be assigned to postgres (70:70)
    # We map the root container user to the coder-db user running on the host
    # to give access to configuration and database files
    uidmap:
      - "0:4000000000:70"
      - "70:{{ coder_db_container_user_result.uid }}:1"
      - "71:4000000071:100000"

    gidmap:
      - "0:4000000000:100000"
      - "+70:@{{ coder_db_container_user_result.group }}:1"

    recreate: true

    healthcheck: "pg_isready -U {{ coder_db_user }} -d {{ coder_db_name }}"
    healthcheck_interval: 5s
    healthcheck_timeout: 5s
    healthcheck_retries: 5

    quadlet_options:
      - |
        [Install]
        WantedBy=default.target
  notify:
    - Reload systemd daemons
    - Restart Coder DB service
    - Restart Coder service

- meta: flush_handlers

- name: Create Coder Quadlet
  containers.podman.podman_container:
    name: coder
    image: ghcr.io/coder/coder:{{ coder_version }}
    state: quadlet

    volumes: /var/run/docker.sock:/var/run/docker.sock
    env_file: "{{ coder_conf_dir }}/coder.env"
    recreate: true
    network: coder
    requires: coder-db

    # Coder runs as coder:coder.
    # We map the coder container user to the coder user running on the host
    # to give access to configuration files
    uidmap:
      - "0:4000000000:1000"
      - "1000:{{ coder_container_user_result.uid }}:1"
      - "1001:4000001000:100000"

    # We map the coder group in the container to the containers group running on
    # the host to give access to the Docker socket.
    gidmap:
      - "0:4000000000:100000"
      - "+1000:@{{ containers_group_result.stdout }}:1"

    labels:
      traefik.enable: true
      traefik.http.routers.coder.rule: Host(`coder.{{ internal_domain}}`)
      traefik.http.routers.coder.entrypoints: websecure
      traefik.http.routers.coder.tls.certresolver: letsencrypt
      traefik.http.routers.coder.tls.domains[0].main: coder.{{ internal_domain }}
      traefik.http.services.coder.loadbalancer.server.port: 7080

    quadlet_options:
      - |
        [Install]
        WantedBy=default.target
  notify:
    - Reload systemd daemons
    - Restart Coder service

- meta: flush_handlers

- name: Start Coder DB
  systemd_service:
    name: coder-db
    state: started
    enabled: true

- name: Start Coder
  systemd_service:
    name: coder
    state: started
    enabled: true

- name: Create Coder workspaces network Quadlet
  containers.podman.podman_network:
    name: coder-workspaces
    state: quadlet
    # Enable DNS resolution based on container names
    disable_dns: false
    dns:
      - "{{ internal_gateway }}"
    driver: bridge
    force: true
    recreate: true
    internal: false
    interface_name: podman-coder
    opt:
      isolate: true
  notify:
    - Reload systemd daemons

# Temporary fix until containers.podman.podman_network release > 1.15.3 is published
# See https://github.com/containers/ansible-podman-collections/pull/793
- name: Add DNS entry to coder network
  ansible.builtin.lineinfile:
    path: /etc/containers/systemd/coder.network
    line: DNS="{{ internal_gateway }}"
  notify:
    - Reload systemd daemons

- name: Add DNS entry to coder-workspaces network
  ansible.builtin.lineinfile:
    path: /etc/containers/systemd/coder-workspaces.network
    line: DNS="{{ internal_gateway }}"
  notify:
    - Reload systemd daemons