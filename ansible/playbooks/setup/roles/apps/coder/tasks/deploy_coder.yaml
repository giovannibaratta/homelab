# This workaround is needed because the current release of Bitwarden Secret Manager is bugged and
# two variables cannot be used at the same time.
# https://community.bitwarden.com/t/bitwarden-lookup-plugin-for-ansible-causes-panick-errors-and-a-worker-was-found-in-a-dead-state/64579/7
- set_fact:
    coder_db_password: "{{ coder_db_password }}"

- set_fact:
    internal_domain: "{{ internal_domain }}"

- name: Create coder directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0770
    owner: root
    group: nogroup
  with_items:
    - "{{ coder_conf_dir }}"
    - "{{ coder_work_dir }}"
    - "{{ coder_database_dir }}"

- name: Copy coder-db.env file
  template:
    src: coder-db.env.j2
    dest: "{{ coder_conf_dir }}/coder-db.env"
    mode: 0640
  notify:
    - Restart Coder DB service
    - Restart Coder service

- name: Copy coder.env file
  template:
    src: coder.env.j2
    dest: "{{ coder_conf_dir }}/coder.env"
    mode: 0640
  notify:
    - Restart Coder service

- name: Create Coder network Quadlet
  containers.podman.podman_network:
    name: coder
    state: quadlet
    disable_dns: false
    driver: bridge
    interface_name: podman-coder
    opt:
      isolate: true

- name: Start Coder network
  systemd_service:
    # The name is the name of the network + network suffix
    name: coder-network
    state: started
    enabled: true

- name: Create Coder database Quadlet
  containers.podman.podman_container:
    name: coder-db
    image: docker.io/postgres:16.3-alpine
    state: quadlet

    volumes:
      - "{{ coder_database_dir }}:/var/lib/postgresql/data"

    env_file:
      - "{{ coder_conf_dir }}/coder-db.env"

    network:
      - coder

    healthcheck: "pg_isready -U {{ coder_db_user }} -d {{ coder_db_name }}"
    healthcheck_interval: 5s
    healthcheck_timeout: 5s
    healthcheck_retries: 5
  notify:
    - Reload systemd daemons
    - Restart Coder DB service
    - Restart Coder service

- name: Create Coder Quadlet
  containers.podman.podman_container:
    name: coder
    image: ghcr.io/coder/coder:{{ coder_version }}
    state: quadlet

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

    env_file:
      - "{{ coder_conf_dir }}/coder.env"

    network:
      - coder

    labels:
      traefik.enable: true
      traefik.http.routers.coder.rule: Host(`coder.{{ internal_domain}}`)
      traefik.http.routers.coder.entrypoints: websecure
      traefik.http.routers.coder.tls.certresolver: letsencrypt
      traefik.http.routers.coder.tls.domains[0].main: coder.{{ internal_domain }}
      traefik.http.services.coder.loadbalancer.server.port: 7080

    requires:
      - coder-db
  notify:
    - Reload systemd daemons
    - Restart Coder service

- name: Start Coder DB
  systemd_service:
    name: coder-db
    state: started
    enabled: true

- name: Start Coder
  systemd_service:
    name: coder
    state: started
    enabled: true